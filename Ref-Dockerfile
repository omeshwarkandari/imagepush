# https://spring.io/guides/topicals/spring-boot-docker
<artifactId>spring-petclinic</artifactId>
  <version>2.2.0.BUILD-SNAPSHOT</version>
  <artifactId>spring-boot-docker</artifactId>
	<version>0.0.1-SNAPSHOT</version>

ARG JAR_FILE=target/spring-petclinic-2.2.0.BUILD-SNAPSHOT.jar

# Add the application's jar to the container
ADD ${JAR_FILE} spring-petclinic-docker.jar

FROM openjdk:8-jdk-alpine
ARG JAR_FILE=target/spring-petclinic-2.2.0.BUILD-SNAPSHOT.jar
COPY ${JAR_FILE} spring-petclinic-docker.jar
ENTRYPOINT ["java","-jar","/spring-petclinic.jar"]

FROM openjdk:11
WORKDIR /opt/petclinic
ARG JAR_FILE=target/*.jar
COPY ${JAR_FILE} /opt/petclinic/petclinic.jar
ENTRYPOINT ["java","-jar","/petclinic.jar"]


#Basic Dockerfile ( Created Image and Deployed with Depoly.yaml)
FROM openjdk:8-jdk-alpine
EXPOSE 8080
VOLUME /tmp
COPY ./petclinic/target/*.jar petclinic.jar
CMD ["java","-jar","petclinic.jar"]   



# Better Dockerfile
FROM openjdk:8-jdk-alpine
VOLUME /tmp
ARG DEPENDENCY=target/dependency
COPY ${DEPENDENCY}/BOOT-INF/lib /app/lib
COPY ${DEPENDENCY}/META-INF /app/META-INF
COPY ${DEPENDENCY}/BOOT-INF/classes /app
ENTRYPOINT ["java","-cp","app:app/lib/*","hello.Application"]



# Multistage Docker build:
FROM openjdk:8-jdk-alpine as build
WORKDIR /workspace/app

COPY mvnw .
COPY .mvn .mvn
COPY pom.xml .
COPY src src

RUN ./mvnw install -DskipTests
RUN mkdir -p target/dependency && (cd target/dependency; jar -xf ../*.jar)

FROM openjdk:8-jdk-alpine
VOLUME /tmp
ARG DEPENDENCY=/workspace/app/target/dependency
COPY --from=build ${DEPENDENCY}/BOOT-INF/lib /app/lib
COPY --from=build ${DEPENDENCY}/META-INF /app/META-INF
COPY --from=build ${DEPENDENCY}/BOOT-INF/classes /app
ENTRYPOINT ["java","-cp","app:app/lib/*","hello.Application"]


